/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.Controlador;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import javax.swing.table.DefaultTableModel;
import modelo.*;

/**
 *
 * @author Usuario
 */
public class ConcretarVenta extends javax.swing.JPanel {

    private Controlador controlador;

    /**
     * Creates new form RegistrarVenta
     */
    public ConcretarVenta() {
        initComponents();
    }

    public ConcretarVenta(Controlador controlador) {
        this();
        this.controlador = controlador;
        this.cargarDatosIniciales();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        botonBuscarVtv = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaVenta = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaVtv = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        comboMediosDePago = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtVenta = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtVtv = new javax.swing.JTextField();
        botonBuscarVenta = new javax.swing.JButton();
        botonValidar = new javax.swing.JButton();
        botonConcretar = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaRequisitos = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablaAuto = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        tablaCliente = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();

        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Registrar Venta");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(398, 398, 398)
                .addComponent(jLabel1)
                .addContainerGap(522, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        botonBuscarVtv.setText("Buscar");
        botonBuscarVtv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarVtvActionPerformed(evt);
            }
        });
        jPanel4.add(botonBuscarVtv, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 240, -1, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("Requisitos a cumplir");
        jPanel4.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, -1, -1));

        tablaVenta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "id_cliente", "id_auto", "Monto", "fecha", "Estado"
            }
        ));
        jScrollPane2.setViewportView(tablaVenta);

        jPanel4.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 410, 123));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setText("Automovil Usado");
        jPanel4.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 60, -1, -1));

        tablaVtv.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Id_cliente", "id_autoUsado", "fecha", "Resulado"
            }
        ));
        jScrollPane3.setViewportView(tablaVtv);

        jPanel4.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 410, 100));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Medio de pago:");
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 520, -1, -1));

        comboMediosDePago.setEnabled(false);
        comboMediosDePago.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboMediosDePagoMouseClicked(evt);
            }
        });
        jPanel4.add(comboMediosDePago, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 520, 140, -1));

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel4.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 490, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("ID venta:");
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, -1, -1));
        jPanel4.add(txtVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, 109, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("ID vtv:");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 240, -1, -1));
        jPanel4.add(txtVtv, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 240, 109, -1));

        botonBuscarVenta.setText("Buscar");
        botonBuscarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarVentaActionPerformed(evt);
            }
        });
        jPanel4.add(botonBuscarVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 20, -1, -1));

        botonValidar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botonValidar.setText("Validar Requisitos");
        botonValidar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonValidarActionPerformed(evt);
            }
        });
        jPanel4.add(botonValidar, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 600, -1, 37));

        botonConcretar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botonConcretar.setText("Concretar");
        botonConcretar.setEnabled(false);
        botonConcretar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConcretarActionPerformed(evt);
            }
        });
        jPanel4.add(botonConcretar, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 600, 108, 37));

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel17.setText("VTV");
        jPanel4.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, -1));

        tablaRequisitos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Id", "Requisito"
            }
        ));
        jScrollPane4.setViewportView(tablaRequisitos);

        jPanel4.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 450, 410, 123));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel18.setText("Cliente");
        jPanel4.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 230, -1, -1));

        tablaAuto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Marca", "Modelo", "Año", "Kilometraje"
            }
        ));
        jScrollPane5.setViewportView(tablaAuto);

        jPanel4.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 90, 510, 123));

        tablaCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre", "Apellido", "DNI", "Telefono", "Direccion"
            }
        ));
        jScrollPane6.setViewportView(tablaCliente);

        jPanel4.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 270, 510, 123));

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel19.setText("Venta");
        jPanel4.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, -1, -1));

        jPanel1.add(jPanel4, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 715, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void botonConcretarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConcretarActionPerformed
        Venta venta = this.controlador.buscarVenta(Long.parseLong(txtVenta.getText()));
        String nombreMedio = (String) comboMediosDePago.getSelectedItem();
        MedioPago mp = this.controlador.buscarMedioPago(nombreMedio);
        EstadoVenta et = this.controlador.buscarEstadoVenta("Concretada");
        Calendar cal = Calendar.getInstance();
        Date fecha = cal.getTime();
        venta.setFecha(fecha);
        venta.setMedioPago(mp);
        venta.setEstadoVenta(et);
        this.controlador.actualizarVenta(venta);
        JOptionPane.showMessageDialog(this, "Venta concretada exitosamente", "Aviso", INFORMATION_MESSAGE);
        botonConcretar.setEnabled(false);
        comboMediosDePago.setEnabled(false);
        txtVenta.setEnabled(true);
        txtVenta.setText("");
        txtVtv.setEnabled(true);
        txtVtv.setText("");
        botonBuscarVenta.setEnabled(true);
        botonBuscarVtv.setEnabled(true);

    }//GEN-LAST:event_botonConcretarActionPerformed

    private void botonValidarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonValidarActionPerformed
        boolean ban = this.verificarCajaNumerica(txtVenta.getText());
        boolean ban2 = this.verificarCajaNumerica(txtVtv.getText());
        if (ban == true && ban2 == true) {
            try {
                Venta venta = this.controlador.buscarVenta(Long.parseLong(txtVenta.getText()));
                Vtv vtv = this.controlador.buscarVtv(Long.parseLong(txtVtv.getText()));
                EstadoVTV et = this.controlador.buscarEstadoVTV("Aprobado");
                if (vtv.getAutoUsado().getId() == venta.getAutoUsado().getId()) {
                    if (vtv.getEstadoVTV() == et){
                        comboMediosDePago.setEnabled(true);
                        botonValidar.setEnabled(false);
                        txtVenta.setEnabled(false);
                        txtVtv.setEnabled(false);
                        JOptionPane.showMessageDialog(this, "Validacion Correcta  ", "Aviso", INFORMATION_MESSAGE);
                    }else{
                        JOptionPane.showMessageDialog(this, "Tiene que tener vtv aprobada para concretar la venta", "Error", ERROR_MESSAGE);
                    }
                    

                }else{
                    JOptionPane.showMessageDialog(this, "El numero de vtv y el numero de venta ingresados refieren a automoviles diferentes", "Error", ERROR_MESSAGE);
                }
            } catch (Exception ex) {
            }
        } else {
            JOptionPane.showMessageDialog(this, "Tiene que ingresar el id de la venta y de la vtv para poder validar", "Error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonValidarActionPerformed

    private void botonBuscarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarVentaActionPerformed
        boolean ban = this.verificarCajaNumerica(txtVenta.getText());
        if (ban == true) {
            Venta venta = this.controlador.buscarVenta(Long.parseLong(txtVenta.getText()));
            if (venta != null) {
                this.cargarTablas(venta);

            } else {
                JOptionPane.showMessageDialog(this, "El id ingresado no corresponde con ninguna venta registrada ", "Error", ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_botonBuscarVentaActionPerformed

    private void botonBuscarVtvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarVtvActionPerformed
        boolean ban = this.verificarCajaNumerica(txtVtv.getText());
        if (ban == true) {
            Vtv vtv = this.controlador.buscarVtv(Long.parseLong(txtVtv.getText()));
            if (vtv != null) {
                this.cargarTablaVtv(vtv);
            } else {
                JOptionPane.showMessageDialog(this, "El id ingresado no corresponde con ninguna vtv registrada ", "Error", ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_botonBuscarVtvActionPerformed

    private void comboMediosDePagoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboMediosDePagoMouseClicked
        botonConcretar.setEnabled(true);
    }//GEN-LAST:event_comboMediosDePagoMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonBuscarVenta;
    private javax.swing.JButton botonBuscarVtv;
    private javax.swing.JButton botonConcretar;
    private javax.swing.JButton botonValidar;
    private javax.swing.JComboBox<String> comboMediosDePago;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable tablaAuto;
    private javax.swing.JTable tablaCliente;
    private javax.swing.JTable tablaRequisitos;
    private javax.swing.JTable tablaVenta;
    private javax.swing.JTable tablaVtv;
    private javax.swing.JTextField txtVenta;
    private javax.swing.JTextField txtVtv;
    // End of variables declaration//GEN-END:variables

    public boolean verificarCajaNumerica(String texto) {
        char[] caracteres = texto.toCharArray();
        boolean ban = true;
        for (int i = 0; i < caracteres.length; i++) {
            if (Character.isDigit(caracteres[i]) == false) {
                ban = false;
                JOptionPane.showMessageDialog(this, "Solo debe ingresar numeros", "Error", ERROR_MESSAGE);
            }
        }

        if (texto.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe ingresar un numero antes de presionar el boton Buscar", "Error", ERROR_MESSAGE);
            ban = false;
        }
        return ban;
    }

    public void cargarTablas(Venta venta) {
        AutomovilUsado auto = venta.getAutoUsado();
        Cliente cli = auto.getCliente();

        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");//0
        modelo.addColumn("DNI");//1
        modelo.addColumn("Nombre");//2
        modelo.addColumn("Apellido");//3
        modelo.addColumn("Telefono");//4
        modelo.addColumn("Direccion");//5
        modelo.setNumRows(1);
        int i = 0;
        modelo.setValueAt(cli.getId(), i, 0);
        modelo.setValueAt(cli.getDni(), i, 1);
        modelo.setValueAt(cli.getNombre(), i, 2);
        modelo.setValueAt(cli.getApellido(), i, 3);
        modelo.setValueAt(cli.getTelefono(), i, 4);
        modelo.setValueAt(cli.getDireccion(), i, 5);

        this.tablaCliente.setModel(modelo);

        modelo = null;
        // SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        DefaultTableModel modelo2 = new DefaultTableModel();
        modelo2.addColumn("Id");//0
        modelo2.addColumn("Id_Cliente");//1
        modelo2.addColumn("Id_Automovil");//2
        modelo2.addColumn("Monto");//3
        modelo2.addColumn("Estado");//4
        modelo2.setNumRows(1);
        i = 0;
        modelo2.setValueAt(venta.getId(), i, 0);
        modelo2.setValueAt(venta.getAutoUsado().getCliente().getId(), i, 1);
        modelo2.setValueAt(venta.getAutoUsado().getAuto().getId(), i, 2);
        modelo2.setValueAt(venta.getAutoUsado().getCotizacionVenta(), i, 3);

        modelo2.setValueAt(venta.getEstadoVenta().getNombre(), i, 4);

        this.tablaVenta.setModel(modelo2);
        modelo2 = null;
        //CARGO LA TABLA AUTOMOVIL USADO

        System.out.println("Id auto en venta: " + auto.getId());

        System.out.println("Modelo auto en venta: " + auto.getAuto().getModelo().getNombre());
        System.out.println("Marca del auto en venta: " + auto.getAuto().getModelo().getMarca().getNombre());
        System.out.println("Año del auto en venta: " + auto.getAuto().getYear());
        System.out.println("Kilometraje del auto en venta: " + auto.getKilometraje());
        DefaultTableModel modelo3 = new DefaultTableModel();
        modelo3.addColumn("Id");//0
        modelo3.addColumn("Id_automovil");//1
        modelo3.addColumn("Marca");//2
        modelo3.addColumn("Modelo");//3
        modelo3.addColumn("Año");//4
        modelo3.addColumn("Kilometraje");//5

        modelo3.setNumRows(1);
        i = 0;
        try {
            modelo3.setValueAt(auto.getId(), i, 0);
            modelo3.setValueAt(auto.getAuto().getId(), i, 1);
            modelo3.setValueAt(auto.getAuto().getModelo().getMarca().getNombre(), i, 2);
            modelo3.setValueAt(auto.getAuto().getModelo().getNombre(), i, 3);
            modelo3.setValueAt(auto.getAuto().getYear(), i, 4);
            modelo3.setValueAt(auto.getKilometraje(), i, 5);

        } catch (Exception ex) {
        }

        this.tablaAuto.setModel(modelo3);

    }

    public void cargarTablaVtv(Vtv vtv) {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");//0
        modelo.addColumn("Id_Cliente");//1
        modelo.addColumn("Id_AutoUsado");//2
        modelo.addColumn("Fecha");//3
        modelo.addColumn("Resultado");//4

        modelo.setNumRows(1);
        int i = 0;
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        modelo.setValueAt(vtv.getId(), i, 0);
        modelo.setValueAt(vtv.getAutoUsado().getCliente().getId(), i, 1);
        modelo.setValueAt(vtv.getAutoUsado().getId(), i, 2);
        modelo.setValueAt(sdf.format(vtv.getTurno().getFecha()), i, 3);
        modelo.setValueAt(vtv.getEstadoVTV().getNombre(), i, 4);

        this.tablaVtv.setModel(modelo);
    }

    public void cargarDatosIniciales() {
        List<MedioPago> medios = controlador.ListarMediosPago();

        for (int i = 0; i < medios.size(); i++) {
            comboMediosDePago.addItem(medios.get(i).getNombre());
        }

        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("Nombre");//0

        List<Requisito> requisitos = this.controlador.ListarRequisitos();

        if (!requisitos.isEmpty()) {
            modelo.setRowCount(requisitos.size());

            for (int i = 0; i < requisitos.size(); i++) {

                modelo.setValueAt(requisitos.get(i).getId(), i, 0);
                modelo.setValueAt(requisitos.get(i).getNombre(), i, 1);

            }

        }

        this.tablaRequisitos.setModel(modelo);

    }

}
