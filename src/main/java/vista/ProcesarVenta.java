/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.Controlador;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import javax.swing.table.DefaultTableModel;
import modelo.*;
/**
 *
 * @author Usuario
 */
public class ProcesarVenta extends javax.swing.JPanel {
    
    private Controlador controlador;
    /**
     * Creates new form Ventas
     */
    public ProcesarVenta() {
        initComponents();
    }

    public ProcesarVenta(Controlador controlador) {
        this();
        this.controlador = controlador;
        this.cargarComboMarcas();
        this.cargarRequisitos();
        
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        botonNueva = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        botonGuardar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        botonCotizar = new javax.swing.JButton();
        txtCotizacion = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtKilometraje = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaTurnos = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        comboTurnos = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaRequisitos = new javax.swing.JTable();
        comboMarcas = new javax.swing.JComboBox<>();
        comboModelos = new javax.swing.JComboBox<>();
        comboAnios = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        checkRequisitos = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        txtDni = new javax.swing.JTextField();
        botonBuscar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaCliente = new javax.swing.JTable();

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Procesar Venta");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, -1, -1));

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jButton3.setText("Eliminar");
        jButton3.setEnabled(false);

        botonNueva.setText("Nueva");
        botonNueva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonNuevaActionPerformed(evt);
            }
        });

        jButton6.setText("Modificar");
        jButton6.setEnabled(false);

        botonGuardar.setText("Guardar");
        botonGuardar.setEnabled(false);
        botonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(botonNueva, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(botonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(botonGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                    .addComponent(botonNueva, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15))
        );

        jPanel1.add(jPanel3, java.awt.BorderLayout.PAGE_END);

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("Automovil");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(77, 91, -1, -1));

        jLabel9.setText("Marca");
        jPanel4.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(77, 139, -1, -1));

        jLabel7.setText("Modelo");
        jPanel4.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 139, -1, -1));

        jLabel8.setText("Año");
        jPanel4.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(297, 139, 30, -1));

        botonCotizar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        botonCotizar.setText("Cotizar");
        botonCotizar.setEnabled(false);
        botonCotizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCotizarActionPerformed(evt);
            }
        });
        jPanel4.add(botonCotizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 234, 88, 42));

        txtCotizacion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCotizacion.setEnabled(false);
        jPanel4.add(txtCotizacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(186, 240, 162, 30));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Cotizacion:");
        jPanel4.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 210, 76, -1));

        jLabel11.setText("Kilometraje");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(413, 139, 73, -1));

        txtKilometraje.setEnabled(false);
        jPanel4.add(txtKilometraje, new org.netbeans.lib.awtextra.AbsoluteConstraints(394, 170, 104, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setText("VTV");
        jPanel4.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 309, -1, -1));

        tablaTurnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "NroTurno", "Fecha", "Hora"
            }
        ));
        jScrollPane1.setViewportView(tablaTurnos);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 320, 348, 123));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Turnos Disponibles:");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 285, -1, -1));

        comboTurnos.setEnabled(false);
        comboTurnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboTurnosMouseClicked(evt);
            }
        });
        comboTurnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTurnosActionPerformed(evt);
            }
        });
        jPanel4.add(comboTurnos, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 361, 83, -1));

        jLabel3.setText("N° de Turno elegido");
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 338, -1, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("Requisitos a cumplir");
        jPanel4.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 448, -1, -1));

        tablaRequisitos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tablaRequisitos);

        jPanel4.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(119, 477, 348, 123));

        comboMarcas.setEnabled(false);
        comboMarcas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboMarcasMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                comboMarcasMouseEntered(evt);
            }
        });
        comboMarcas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboMarcasActionPerformed(evt);
            }
        });
        jPanel4.add(comboMarcas, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 170, 100, -1));

        comboModelos.setEnabled(false);
        comboModelos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboModelosItemStateChanged(evt);
            }
        });
        comboModelos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboModelosMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                comboModelosMousePressed(evt);
            }
        });
        comboModelos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboModelosActionPerformed(evt);
            }
        });
        jPanel4.add(comboModelos, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 170, 90, -1));

        comboAnios.setEnabled(false);
        comboAnios.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboAniosItemStateChanged(evt);
            }
        });
        comboAnios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboAniosMouseClicked(evt);
            }
        });
        comboAnios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboAniosActionPerformed(evt);
            }
        });
        jPanel4.add(comboAnios, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 170, 80, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setText("$");
        jPanel4.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(164, 244, -1, -1));

        checkRequisitos.setText("Cliente informado");
        checkRequisitos.setEnabled(false);
        checkRequisitos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkRequisitosMouseClicked(evt);
            }
        });
        jPanel4.add(checkRequisitos, new org.netbeans.lib.awtextra.AbsoluteConstraints(496, 520, -1, -1));

        jLabel4.setText("DNI CLiente:");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, -1, -1));

        txtDni.setEnabled(false);
        jPanel4.add(txtDni, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, 109, -1));

        botonBuscar.setText("Buscar Cliente");
        botonBuscar.setEnabled(false);
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarActionPerformed(evt);
            }
        });
        jPanel4.add(botonBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, -1, -1));

        tablaCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "DNI", "Nombre", "Apellido"
            }
        ));
        jScrollPane3.setViewportView(tablaCliente);

        jPanel4.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 20, 450, 90));

        jPanel1.add(jPanel4, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void botonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarActionPerformed
            try{
            float kilometraje = Float.parseFloat(txtKilometraje.getText());
            float cotizacion = Float.parseFloat(txtCotizacion.getText());
            
            String anio = (String) comboAnios.getSelectedItem();
            String nombreModelo = (String) comboModelos.getSelectedItem();
            Modelo modelo = this.controlador.buscarModelo(nombreModelo);
            Automovil auto = this.controlador.buscarAutomovil(modelo, anio);
            Cliente cli = this.verificarDniCliente();
            AutomovilUsado autoUsado = new AutomovilUsado(auto, cli, kilometraje, cotizacion );
            this.controlador.persistirAutomovilUsado(autoUsado);
            String idTurno = (String)comboTurnos.getSelectedItem();
            Turno turno = this.controlador.buscarTurno(Long.parseLong(idTurno));
            EstadoTurno et = this.controlador.buscarEstadoTurno("Ocupado");
            turno.setEstadoTurno(et);
            this.controlador.actualizarTurno(turno);
            cargarTurnosDisponibles();

            //CREAMOS UNA VTV APROBADA PARA COMPROBAR QUE FUNCIONA EL CASO DE USO CONCRETARVENTA
            EstadoVTV etv = this.controlador.buscarEstadoVtv(Long.parseLong("3"));
            Vtv vtv = new Vtv (autoUsado, etv, turno);
            this.controlador.persistirVtv(vtv);
            JOptionPane.showMessageDialog(this, "Vtv agendada. Su codigo es:  " +vtv.getId().toString(), "Aviso", INFORMATION_MESSAGE);
            
            EstadoVenta ev = this.controlador.buscarEstadoVenta("En proceso");
            CotizadorAntiguedad ca = this.controlador.buscarCotizadorAntiguedad(Long.parseLong("1"));
            CotizadorKilometraje ck = this.controlador.buscarCotizadorKilometraje(Long.parseLong("1"));
            List<Requisito>requisitos = this.controlador.ListarRequisitos();
            
            Venta venta = new Venta (ev, ck, ca, autoUsado, requisitos);
            this.controlador.persistirVenta(venta);
            
            JOptionPane.showMessageDialog(this, "La venta se cargó. Su codigo es:  " +venta.getId().toString(), "Aviso", INFORMATION_MESSAGE);
            botonNueva.setEnabled(false);
       comboTurnos.removeAllItems();
       txtDni.setText("");
       comboModelos.setEnabled(false);
       comboAnios.setEnabled(false);
       txtKilometraje.setText("");
       txtCotizacion.setText("");
       botonCotizar.setEnabled(false);
       botonGuardar.setEnabled(false);
       botonNueva.setEnabled(true);
       botonBuscar.setEnabled(false);
       txtDni.setEnabled(false);
       checkRequisitos.setSelected(false);
        comboTurnos.setEnabled(false);
        comboMarcas.setEnabled(false);
        this.cargarTablaCliente(null);
            }catch (Exception ex){}
//mostrar el codigo de venta generado y mostrarlo en un joptionpane
    }//GEN-LAST:event_botonGuardarActionPerformed

    private void comboMarcasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboMarcasMouseClicked
        try{
            String nombreMarca = (String) comboMarcas.getSelectedItem();
            Marca marca = this.controlador.buscarMarca(nombreMarca);

            comboModelos.removeAllItems();
            List<Automovil>autos = this.controlador.ListarAutomoviles(marca);
            
            comboModelos.setEnabled(true);
            this.cargarComboModelos(marca);

        }catch (Exception ex){

        }

    }//GEN-LAST:event_comboMarcasMouseClicked

    private void comboMarcasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboMarcasMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_comboMarcasMouseEntered

    private void comboMarcasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboMarcasActionPerformed

    }//GEN-LAST:event_comboMarcasActionPerformed

    private void comboModelosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboModelosItemStateChanged

    }//GEN-LAST:event_comboModelosItemStateChanged

    private void comboModelosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboModelosMouseClicked
        try{
            String nombreModelo = (String) comboModelos.getSelectedItem();

            Modelo modelo = this.controlador.buscarModelo(nombreModelo);

            List<Automovil>autos = this.controlador.ListarAutomoviles(modelo);
            // JOptionPane.showMessageDialog(this, "Buscando autos de ese modelo...", "Aviso", INFORMATION_MESSAGE);
            comboAnios.removeAllItems();
            comboAnios.setEnabled(true);
            this.cargarComboAnios(modelo);
        }catch (Exception ex){

        }
    }//GEN-LAST:event_comboModelosMouseClicked

    private void comboModelosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboModelosMousePressed

    }//GEN-LAST:event_comboModelosMousePressed

    private void comboModelosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboModelosActionPerformed

    }//GEN-LAST:event_comboModelosActionPerformed

    private void comboAniosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboAniosItemStateChanged

    }//GEN-LAST:event_comboAniosItemStateChanged

    private void comboAniosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboAniosMouseClicked
        

           botonCotizar.setEnabled(true);
           
            
            //  JOptionPane.showMessageDialog(this, "Cantidad de modelo+año es = " +autos.size(), "Aviso", INFORMATION_MESSAGE);
            
        
    }//GEN-LAST:event_comboAniosMouseClicked

    private void comboAniosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboAniosActionPerformed

    }//GEN-LAST:event_comboAniosActionPerformed

    private void botonCotizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCotizarActionPerformed
        try{
            char []caracteres = txtKilometraje.getText().toCharArray();
        int ban=0;
        for(int i=0; i< caracteres.length; i++){
            if( Character.isLetter(caracteres[i]) == true){
                ban=1;
                JOptionPane.showMessageDialog(this, "Solo debe ingresar numeros en el campo kilometraje", "Error", ERROR_MESSAGE);
            }
        }
        
        if(txtKilometraje.getText().isEmpty() ) {
                JOptionPane.showMessageDialog(this, "Debe ingresar el kilometraje del auto antes de presionar el boton Cotizar", "Error", ERROR_MESSAGE);
                ban=1;
        }
        if (ban ==0 ){
             float kilometraje;
            
             kilometraje = Float.parseFloat(txtKilometraje.getText());
           
            String anio = (String) comboAnios.getSelectedItem();
            String nombreModelo = (String) comboModelos.getSelectedItem();
            Modelo modelo = this.controlador.buscarModelo(nombreModelo);
            Automovil auto = this.controlador.buscarAutomovil(modelo, anio);
            
            float montoTotal = this.controlador.cotizarAuto(auto.getCotizacion(), kilometraje, anio);
            txtCotizacion.setText( Float.toString(montoTotal));
            cargarTurnosDisponibles();
            comboTurnos.setEnabled(true);
            botonCotizar.setEnabled(false);
        }
        
           
        
        }catch (Exception ex){
        }
        
    }//GEN-LAST:event_botonCotizarActionPerformed

    private void botonNuevaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNuevaActionPerformed
       comboMarcas.setEnabled(true);
       txtKilometraje.setEnabled(true);
       botonBuscar.setEnabled(true);
       txtDni.setEnabled(true);
       
    }//GEN-LAST:event_botonNuevaActionPerformed

    private void comboTurnosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboTurnosMouseClicked
checkRequisitos.setEnabled(true);
    }//GEN-LAST:event_comboTurnosMouseClicked

    private void checkRequisitosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkRequisitosMouseClicked
        if (checkRequisitos.isSelected()){
            botonGuardar.setEnabled(true);
        }else{
            botonGuardar.setEnabled(false);
        }
    }//GEN-LAST:event_checkRequisitosMouseClicked

    private void botonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarActionPerformed
        Cliente cli = this.verificarDniCliente();
        
    }//GEN-LAST:event_botonBuscarActionPerformed

    private void comboTurnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTurnosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboTurnosActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonBuscar;
    private javax.swing.JButton botonCotizar;
    private javax.swing.JButton botonGuardar;
    private javax.swing.JButton botonNueva;
    private javax.swing.JCheckBox checkRequisitos;
    private javax.swing.JComboBox<String> comboAnios;
    private javax.swing.JComboBox<String> comboMarcas;
    private javax.swing.JComboBox<String> comboModelos;
    private javax.swing.JComboBox<String> comboTurnos;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tablaCliente;
    private javax.swing.JTable tablaRequisitos;
    private javax.swing.JTable tablaTurnos;
    private javax.swing.JTextField txtCotizacion;
    private javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtKilometraje;
    // End of variables declaration//GEN-END:variables

  public void cargarComboModelos (Marca marca){
        
        List <Modelo> listaModelos = controlador.ListarModelos(marca);
        for(int i = 0; i < listaModelos.size() ; i++ ){
             comboModelos.addItem(listaModelos.get(i).getNombre());
         }
    }
    
    public void cargarComboAnios (Modelo modelo){
        List <Automovil> listaAutos = controlador.ListarAutomoviles(modelo);
        for(int i = 0; i < listaAutos.size() ; i++ ){
             comboAnios.addItem(listaAutos.get(i).getYear());
         }
    }
    
    public void cargarComboMarcas (){
         List <Marca> listaMarcas = controlador.ListarMarcas();
        
        for(int i = 0; i < listaMarcas.size() ; i++ ){
             comboMarcas.addItem(listaMarcas.get(i).getNombre());
        }
    }
    
    
    public void cargarTurnosDisponibles(){
        
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("Fecha");//0
        modelo.addColumn("Hora");//1
        

        List<Turno>turnos = this.controlador.ListarTurnosDisponibles();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
      
        if (!turnos.isEmpty()){
             modelo.setRowCount(turnos.size());
        
            for(int i = 0; i < turnos.size(); i++){
                //cargo el combo de los turnos
                comboTurnos.addItem(turnos.get(i).getId().toString());
                //cargo la tabla de los turnos
                modelo.setValueAt(turnos.get(i).getId(), i, 0);
                
                modelo.setValueAt(sdf.format(turnos.get(i).getFecha()), i, 1);
                modelo.setValueAt(turnos.get(i).getHora(), i, 2);
                

            }
        
        }
     
       
        this.tablaTurnos.setModel(modelo);
    }
    
    
     public void cargarRequisitos(){
        
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("Nombre");//0
       
        

        List<Requisito>requisitos = this.controlador.ListarRequisitos();
        
      
        if (!requisitos.isEmpty()){
             modelo.setRowCount(requisitos.size());
        
            for(int i = 0; i < requisitos.size(); i++){
                
                modelo.setValueAt(requisitos.get(i).getId(), i, 0);
                modelo.setValueAt(requisitos.get(i).getNombre(), i, 1);
            

            }
        
        }
     
       
        this.tablaRequisitos.setModel(modelo);
    }
     
      public Cliente verificarDniCliente(){
        Cliente clienteTemporal = null;
        char []caracteres = txtDni.getText().toCharArray();
        int ban=0;
        for(int i=0; i< caracteres.length; i++){
            if( Character.isDigit(caracteres[i]) == false){
                ban=1;
                JOptionPane.showMessageDialog(this, "Solo debe ingresar numeros en el campo DNI", "Error", ERROR_MESSAGE);
            }
        }
        
        if(txtDni.getText().isEmpty() ) {
                JOptionPane.showMessageDialog(this, "Debe ingresar el DNI antes de presionar el boton Buscar", "Error", ERROR_MESSAGE);
                ban=1;
        }
        if (ban ==0 ){
            int dni = Integer.parseInt(txtDni.getText());
             clienteTemporal = controlador.buscarCliente(dni);
            if (clienteTemporal == null){
                
                JOptionPane.showMessageDialog(this, "El DNI ingresado no corresponde con ningun cliente registrado", "Error", ERROR_MESSAGE);
                txtDni.setText("");
            }else{
            this.cargarTablaCliente(clienteTemporal);
            
            }
        }
        return clienteTemporal;
    }
      
          public void cargarTablaCliente (Cliente cli){
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");//0
        modelo.addColumn("DNI");//1
        modelo.addColumn("Nombre");//2
        modelo.addColumn("Apellido");//3
        modelo.addColumn("Telefono");//4
        modelo.addColumn("Direccion");//5
        if (cli != null){
        modelo.setNumRows(1);
                 int i=0;
            modelo.setValueAt(cli.getId(), i, 0);
            modelo.setValueAt(cli.getDni(), i, 1);
            modelo.setValueAt(cli.getNombre(), i, 2);
            modelo.setValueAt(cli.getApellido(), i, 3);
            modelo.setValueAt(cli.getTelefono(), i, 4);
            modelo.setValueAt(cli.getDireccion(), i, 5);
          
        }
        this.tablaCliente.setModel(modelo);
    }
    


}
